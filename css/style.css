* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

h1 {
  color: red;
  text-align: center;
  padding: 2rem 0;
  letter-spacing: 0.25rem;
}

/* ********************START
Sass Import Syntax:
@import filename;
@import filePath/filename;

Tip: You do not need to specify a file extension, Sass automatically assumes that you mean a .sass or .scss file. You can also import CSS files. The @import directive imports the file and any variables or mixins defined in the imported file can then be used in the main file.

You can import as many files as you need in the main file:
@import "variables";
@import "colors";
@import "reset";
after import file must give semicolon 

Sass Partials
By default, Sass transpiles all the .scss files directly. However, when you want to import a file, you do not need the file to be transpiled directly.

Sass has a mechanism for this: If you start the filename with an underscore, Sass will not transpile it. Files named this way are called partials in Sass.

So, a partial Sass file is named with a leading underscore:
Sass Partial Syntax:

 _filename;

 The following example shows a partial Sass file named "_colors.scss". (This file will not be transpiled directly to "colors.css"):

Example
"_colors.scss":

$myPink: #EE82EE;
$myBlue: #4169E1;
$myGreen: #8FBC8F;

Now, if you import the partial file, omit the underscore. Sass understands that it should import the file "_colors.scss":

Example
@import "colors";

body {
  font-family: Helvetica, sans-serif;
  font-size: 18px;
  color: $myBlue;
}
END*************************/
/*# sourceMappingURL=style.css.map */